/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // =================================================================
    // KEYMAP DEFINITION (Mapas de Camadas)
    // =================================================================

	conditional_layers {
		compatible = "zmk,conditional-layers";
		adjust_layer {
			if-layers = <LOWER RAISE>;
			then-layer = <ADJUST>;
		};
	};

	keymap {
		compatible = "zmk,keymap";
		default_layer {
			display-name = "Base";
			bindings = <
&kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 		       &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &none
&studio_unlock &kp Q &kp W &kp E &kp R &kp T 		       &kp Y &kp U &kp I &kp O &kp P &kp BSPC
&kp TAB &kp A &kp S &kp D &kp F &kp G 			       &kp H &kp J &kp K &kp L &kp SEMI &kp SQT
&kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp C_MUTE &kp C_MUTE &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RSHFT
			&kp LGUI &kp LALT &kp LCTRL &mo LOWER &kp RET &kp SPACE &mo RAISE &kp RCTRL &kp RALT &kp RGUI
			>;
			// 1º Slot (Encoder Esquerdo): Volume | 2º Slot (Encoder Direito): Page Up/Down
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		lower_layer {
			display-name = "Lower";
			bindings = <
&trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 		       &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11
&kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 		       &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp F12
&trans &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT 	       &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR &kp PIPE
&trans &kp EQUAL &kp MINUS &kp PLUS &kp LBRC &kp RBRC &trans &trans &kp LBKT &kp RBKT &kp SEMI &kp COLON &kp BSLH &trans
			&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
			>;
			// 1º Slot (Esquerdo): Volume | 2º Slot (Direito): Page Up/Down
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		raise_layer {
			display-name = "Raise";
			bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans &trans &trans
&trans &kp INS &kp PSCRN &kp K_CMENU &trans &trans 		       &kp PG_UP &trans &kp UP &trans &kp N0 &trans
&trans &kp LALT &kp LCTRL &kp LSHFT &trans &kp CLCK 		       &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp DEL &kp BSPC
&trans &kp K_UNDO &kp K_CUT &kp K_COPY &kp K_PASTE &trans &trans &trans &trans &trans &trans &trans &trans &trans
			&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
			>;
			// 1º Slot (Esquerdo): Volume | 2º Slot (Direito): Page Up/Down
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

		adjust_layer {
			display-name = "Adjust";
			bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none &none &none &none &none &none
&ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF &none &none &none &none &none &none
&none &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none &none &none 		       &none &none &none &none &none &none
&none &none &none &none &none &none &rgb_ug RGB_TOG &none &none &none &none &none &none &none
			&none &none &none &none &none &none &none &none &none &none
			>;
			// 1º Slot (Esquerdo): Volume | 2º Slot (Direito): Page Up/Down
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};
	};

    // =================================================================
    // DEVICE TREE OVERLAYS (Nós de Hardware e Periféricos)
    // =================================================================

	chosen {
		aliases {
			pro_micro_i2c = &i2c0;
		};
		zmk,display = &oled;
	};

	&i2c0 {
		status = "okay";
		oled: oled@3c {
			compatible = "solomon,ssd1306fb";
			reg = <0x3c>;
			width = <128>;
			height = <32>;
		};
	};

	&uart0 {
		status = "okay";
		compatible = "nordic,nrf-uarte";
		current-speed = <115200>;
		cdc_acm_uart: cdc_acm_uart {
			compatible = "zephyr,cdc-acm-uart";
		};
	};

	left_encoder: encoder_left {
		compatible = "alps,ec11";
		a-gpios = <&gpio0 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <4>;
		status = "okay";
	};

	right_encoder: encoder_right {
		compatible = "alps,ec11";
		a-gpios = <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <4>;
		status = "okay";
		button-gpios = <&gpio0 19 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
	};

	sensors {
		compatible = "zmk,keymap-sensors";
		// Ordem correta: Esquerdo (Volume) -> Direito (Page Up/Down)
		sensors = <&left_encoder &right_encoder>;
		triggers-per-rotation = <4>;
	};
};
